// <auto-generated />
using System;
using HealthTech.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HealthTech.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250826161953_AddFhirResourceAuditFields")]
    partial class AddFhirResourceAuditFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HealthTech.Domain.Entities.AuditEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("Action");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("Description");

                    b.Property<string>("EventData")
                        .HasColumnType("jsonb")
                        .HasColumnName("EventData");

                    b.Property<string>("EventSubtype")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("EventSubtype");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("EventTime");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("EventType");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ModifiedAt");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("ModifiedBy");

                    b.Property<int>("Outcome")
                        .HasColumnType("integer")
                        .HasColumnName("Outcome");

                    b.Property<string>("ResourceId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("ResourceId");

                    b.Property<string>("ResourceType")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ResourceType");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TenantId");

                    b.Property<string>("UserDisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("UserDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("UserId");

                    b.Property<string>("UserIpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("UserIpAddress");

                    b.Property<int>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("Version");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "EventTime")
                        .HasDatabaseName("IX_AuditEvents_TenantId_EventTime");

                    b.HasIndex("TenantId", "UserId", "EventTime")
                        .HasDatabaseName("IX_AuditEvents_TenantId_UserId_EventTime");

                    b.ToTable("audit_events", null, t =>
                        {
                            t.HasComment("Audit events for compliance tracking");
                        });
                });

            modelBuilder.Entity("HealthTech.Domain.Entities.FhirResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FhirId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("fhir_id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_updated");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("modified_by");

                    b.Property<string>("ResourceJson")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("resource_json");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("resource_type");

                    b.Property<string>("SearchParameters")
                        .HasColumnType("jsonb")
                        .HasColumnName("search_parameters");

                    b.Property<string>("SecurityLabels")
                        .HasColumnType("jsonb")
                        .HasColumnName("security_labels");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status");

                    b.Property<string>("Tags")
                        .HasColumnType("jsonb")
                        .HasColumnName("tags");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tenant_id");

                    b.Property<int>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("version");

                    b.Property<int>("VersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("version_id");

                    b.HasKey("Id");

                    b.HasIndex("SearchParameters")
                        .HasDatabaseName("idx_fhir_resources_search_params");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("SearchParameters"), "gin");

                    b.HasIndex("SecurityLabels")
                        .HasDatabaseName("idx_fhir_resources_security_labels");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("SecurityLabels"), "gin");

                    b.HasIndex("Tags")
                        .HasDatabaseName("idx_fhir_resources_tags");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Tags"), "gin");

                    b.HasIndex("TenantId", "LastUpdated")
                        .HasDatabaseName("idx_fhir_resources_last_updated");

                    b.HasIndex("TenantId", "ResourceType")
                        .HasDatabaseName("idx_fhir_resources_tenant_type");

                    b.HasIndex("TenantId", "ResourceType", "FhirId")
                        .HasDatabaseName("idx_fhir_resources_tenant_id");

                    b.HasIndex("TenantId", "ResourceType", "FhirId", "VersionId")
                        .IsUnique()
                        .HasDatabaseName("fhir_resources_tenant_id_resource_type_fhir_id_version_id_key");

                    b.ToTable("fhir_resources", null, t =>
                        {
                            t.HasComment("FHIR resources stored as JSONB");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
