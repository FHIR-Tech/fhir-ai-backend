version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: fhir-ai-postgres
    environment:
      POSTGRES_DB: fhir-ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Post:!@#$14
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FHIR-AI Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fhir-ai-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=fhir-ai;Username=postgres;Password=Post:!@#$14
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5000:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src/HealthTech.API/appsettings.Development.json:/app/appsettings.Development.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache (for future use)
  redis:
    image: redis:7-alpine
    container_name: fhir-ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
